name: Build, test, tag, containerize, create release and deploy to production

on:
  push:
    branches: [ "production" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-latest
    environment: staging
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      - name: Docker Login
        uses: docker/login-action@v2.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate changelog and git tag
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3.15.0
        with:
          tag-prefix: ''
          skip-version-file: 'true'

      - name: Build
        run: ./gradlew -Pversion=${{ steps.changelog.outputs.tag }} build

      - name: Test
        run: ./gradlew -Pversion=${{ steps.changelog.outputs.tag }} test

      - name: Create docker image
        run: ./gradlew -Pversion=${{ steps.changelog.outputs.tag }} jibDockerBuild

      - name: Tag docker image
        run: docker image tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.changelog.outputs.tag }}

      - name: Push named docker image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.changelog.outputs.tag }}

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Create GitHub release
        uses: softprops/action-gh-release@v0.1.14
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        with:
          name: ${{ steps.changelog.outputs.tag }} / ${{ steps.date.outputs.date }}
          tag_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}

      - name: Update target image on production
        uses: Azure/webapps-deploy@v2
        with:
          app-name: '${{ env.AZURE_WEBAPP_NAME }}'
          publish-profile: '${{ secrets.AZURE_WEB_APP_PUBLISH_PROFILE }}'
          images: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.changelog.outputs.tag }}'
